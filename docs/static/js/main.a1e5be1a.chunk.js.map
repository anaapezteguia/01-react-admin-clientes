{"version":3,"sources":["components/Form.js","components/Appointment.js","App.js","index.js"],"names":["Form","createAppointment","useState","pet","owner","date","hour","symptoms","appointment","setAppointment","error","updateError","handleChange","ev","target","name","value","className","onSubmit","preventDefault","trim","id","uuidv4","type","placeholder","onChange","Appointment","removeAppointment","onClick","App","initialAppointments","JSON","parse","localStorage","getItem","appointments","setNewAppointments","useEffect","setItem","stringify","newAppointments","filter","title","length","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a1e5be1a.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport Proptypes from 'prop-types';\n\nconst Form = ({ createAppointment }) => {\n  // create appointments\n  const [appointment, setAppointment] = useState({\n    pet: '',\n    owner: '',\n    date: '',\n    hour: '',\n    symptoms: '',\n  });\n  const [error, updateError] = useState(false);\n\n  // update inputs\n  const handleChange = (ev) => {\n    setAppointment({\n      ...appointment,\n      [ev.target.name]: ev.target.value,\n    });\n  };\n  // extract values with destructuring to shorten the code\n  const { pet, owner, date, hour, symptoms } = appointment;\n\n  // what happens when the user clicks on 'arrange appointment'\n  const submitAppointment = (ev) => {\n    ev.preventDefault();\n\n    // validation\n    if (\n      pet.trim() === '' ||\n      owner.trim() === '' ||\n      date.trim() === '' ||\n      hour.trim() === '' ||\n      symptoms.trim() === ''\n    ) {\n      updateError(true);\n      return;\n    }\n    // remove previous message\n    updateError(false);\n\n    // asign ID\n    // i've installed and imported a library to generate IDs \"npm i uuid\"\n    appointment.id = uuidv4();\n\n    // create appointment\n    createAppointment(appointment);\n\n    // empty form\n    setAppointment({\n      pet: '',\n      owner: '',\n      date: '',\n      hour: '',\n      symptoms: '',\n    });\n  };\n  return (\n    <>\n      <h2>Arrange appointment</h2>\n      {/* remember not to put an if here, only a ternary */}\n      {error ? <p className=\"alerta-error\">All fields are required</p> : null}\n\n      <form onSubmit={submitAppointment}>\n        <label>Pet</label>\n        <input\n          type=\"text\"\n          name=\"pet\"\n          className=\"u-full-width\"\n          placeholder=\"Pet name\"\n          onChange={handleChange}\n          value={pet}\n        />\n        <label>Owner</label>\n        <input\n          type=\"text\"\n          name=\"owner\"\n          className=\"u-full-width\"\n          placeholder=\"Owner name\"\n          onChange={handleChange}\n          value={owner}\n        />\n        <label>Date</label>\n        <input\n          type=\"date\"\n          name=\"date\"\n          className=\"u-full-width\"\n          onChange={handleChange}\n          value={date}\n        />\n        <label>Hour</label>\n        <input\n          type=\"time\"\n          name=\"hour\"\n          className=\"u-full-width\"\n          onChange={handleChange}\n          value={hour}\n        />\n        <label>Describe your pet symptoms</label>\n        <textarea\n          name=\"symptoms\"\n          className=\"u-full-width\"\n          onChange={handleChange}\n          value={symptoms}\n        ></textarea>\n        <button type=\"submit\" className=\"u-full-width button-primary\">\n          Arrange appointment\n        </button>\n      </form>\n    </>\n  );\n};\n\nForm.propTypes = {\n  createAppointment: Proptypes.func.isRequired,\n};\nexport default Form;\n","import React from 'react';\nimport Proptypes from 'prop-types';\n\nconst Appointment = ({ appointment, removeAppointment }) => (\n  <div className=\"cita\">\n    <p>\n      Pet: <span>{appointment.pet}</span>\n    </p>\n    <p>\n      Owner: <span>{appointment.owner}</span>\n    </p>\n    <p>\n      Date: <span>{appointment.date}</span>\n    </p>\n    <p>\n      Hour: <span>{appointment.hour}</span>\n    </p>\n    <p>\n      Symptoms: <span>{appointment.symptoms}</span>\n    </p>\n    <button\n      className=\"button eliminar u-full-width\"\n      onClick={() => removeAppointment(appointment.id)}\n    >\n      Remove &times;\n    </button>\n  </div>\n);\nAppointment.propTypes = {\n  appointment: Proptypes.object.isRequired,\n  removeAppointment: Proptypes.func.isRequired,\n};\nexport default Appointment;\n","import React, { useState, useEffect } from 'react';\nimport Form from './components/Form';\nimport Appointment from './components/Appointment';\n\nfunction App() {\n  // local storage\n  let initialAppointments = JSON.parse(localStorage.getItem('appointments'));\n  if (!initialAppointments) {\n    initialAppointments = [];\n  }\n\n  // appointments array\n  const [appointments, setNewAppointments] = useState(initialAppointments);\n\n  // use effect to control appointment's life cycle\n  useEffect(() => {\n    localStorage.setItem('appointments', JSON.stringify(appointments));\n  }, [appointments]);\n\n  // appointment's handler function\n  // here we do spread of appointments so that in case\n  // there is more than 1 saved they are not erased\n  const createAppointment = (appointment) => {\n    setNewAppointments([...appointments, appointment]);\n  };\n\n  // this function removes an appointment by its ID\n  const removeAppointment = (id) => {\n    const newAppointments = appointments.filter(\n      (appointment) => appointment.id !== id\n    );\n    setNewAppointments(newAppointments);\n  };\n\n  // conditional message\n  const title =\n    appointments.length === 0\n      ? 'There are no appointments'\n      : 'Manage your appointments';\n\n  return (\n    <>\n      <h1>Vet clinic “Petting my pet”</h1>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"one-half column\">\n            <Form createAppointment={createAppointment} />\n          </div>\n          <div className=\"one-half column\">\n            <h2>{title}</h2>\n            {appointments.map((appointment) => (\n              <Appointment\n                key={appointment.id}\n                appointment={appointment}\n                removeAppointment={removeAppointment}\n              />\n            ))}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}